meta {
  name { Autark }
  description { Autark build system }
  author { Adamansky Anton (adamansky@gmail.com) }
  website { https://autark.dev }
  sources { https://git.sr.ht/~adamansky/autark }
  license { MIT }
  version { 0.9.0 }
}

if { ${RUN_TESTS}
  set {
    BUILD_TESTS 1
  }
}

check {
  checks.sh
}

set {
  META_REVISION
  @{ git rev-parse --short HEAD }
}

set {
  CC
  ${CC cc}
}

set {
  CFLAGS
  -std=c99
  -D_XOPEN_SOURCE=700
  -D_POSIX_C_SOURCE=200809L
  -D_DEFAULT_SOURCE
  if { ${BUILD_TESTS} -DTESTS }
  if { prefix { ${BUILD_TYPE} Release }
    -O1
    -DNDEBUG
  } else {
    -O0
    -ggdb
    -DDEBUG=1
  }
  if { defined {DEBIAN_MULTIARCH}
    -DDEBIAN_MULTIARCH=1
  }
  -Wall -Wextra -Wpedantic
  -Wno-sign-compare
  -Wno-unused-parameter
  -Wno-format-truncation
  ..${CFLAGS}
}

set {
  SOURCES_LIB
  autark_core.c
  deps.c
  log.c
  map.c
  node_basename.c
  node_cc.c
  node_check.c
  node_configure.c
  node_foreach.c
  node_if.c
  node_in_sources.c
  node_include.c
  node_join.c
  node_meta.c
  node_run.c
  node_script.c
  node_set.c
  node_subst.c
  node_dir.c
  node_option.c
  node_error.c
  node_echo.c
  node_install.c
  node_find.c
  paths.c
  pool.c
  script.c
  spawn.c
  ulist.c
  utils.c
  xstr.c
}

cc {
  ${SOURCES_LIB}
  ${CFLAGS}
  ${CC}
  objects {
    CC_OBJS_LIB
  }
  consumes {
    scriptx.h
    config.h
  }
}

cc {
  main.c
  ${CFLAGS}
}

run {
  exec { ${AR} rcs libautark.a ${CC_OBJS_LIB} }
  consumes {
    ${CC_OBJS_LIB}
  }
  produces {
    libautark.a
  }
}

run {
  exec { ${CC} -o autark ${CC_OBJS_LIB} ${CC_OBJS} }
  consumes {
    ${CC_OBJS_LIB}
    ${CC_OBJS}
  }
  produces {
    autark
  }
}

run {
  exec { ${LEG} S{scriptx.leg} -o scriptx.h }
  consumes {
    scriptx.leg
  }
  produces {
    scriptx.h
  }
}

configure {
  config.h.in
  version.sh.in
}

in-sources {
  run {
    exec { amalgamator.sh }
    consumes {
      amalgamator.sh
    }
    produces {
      dist/autark.c
      dist/build.sh
    }
  }
}

if { ${BUILD_TESTS}
  include { ./tests/Autark }
}